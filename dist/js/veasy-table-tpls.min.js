!function(e){try{e=angular.module("veasy.table.templates")}catch(l){e=angular.module("veasy.table.templates",[])}e.run(["$templateCache",function(e){e.put("template.html",'<div>Table Watchers = {{$$watchersCount}}<br>Total Watchers = {{$root.$$watchersCount}}<br><div class=row><div class="col-lg-4 col-md-4 col-sm-5 col-xs-12"><div class=form-group><div class=input-group ng-show=config.filter.enable><input type=text class="form-control input-sm" name=terms ng-model=terms ng-change="search(terms, condition, selectedColumn)" placeholder={{config.labels.filter.by}}><div class=input-group-btn><button type=button class="btn btn-default dropdown-toggle btn-sm" data-toggle=dropdown aria-haspopup=true aria-expanded=false>{{selectedColumn.header}} <span class=caret></span></button><ul class="dropdown-menu dropdown-menu-right"><li ng-repeat="column in filterColumnsList" ng-click="selectFilterColumn(terms, condition, column)"><a>{{column.header}}</a></li></ul></div></div></div></div><div class="col-lg-4 col-md-4 col-sm-3 col-xs-4"><div class=form-group><div class=btn-group role=group ng-if="config.filter.enable && config.filter.conditional"><button type=button class="btn btn-default btn-sm" ng-class="{\'active\': condition === \'AND\'}" btn-radio="\'AND\'" ng-model=condition ng-click="changeSearchCondition(terms, \'AND\', selectedColumn)">{{config.labels.filter.and}}</button> <button type=button class="btn btn-default btn-sm" ng-class="{\'active\': condition === \'OR\'}" btn-radio="\'OR\'" ng-model=condition ng-click="changeSearchCondition(terms, \'OR\', selectedColumn)">{{config.labels.filter.or}}</button></div><div class=vt-spin ng-show=searching><i class="fa fa-refresh fa-spin"></i></div></div></div><div class="col-lg-4 col-md-4 col-sm-4 col-xs-8"><div class=form-group><button ng-if=config.columnFilter.enable class="btn btn-default btn-sm pull-right" ng-click=openColumnFilterModal(config.columns)><i class="fa fa-filter"></i></button> <input ng-if=config.pagination.enable type=number min=1 max=50 class="form-control input-sm vt-ipp-input pull-right" ng-model=config.pagination.itemsPerPage ng-change=changeItemsPerPage(config.pagination.itemsPerPage)> <span ng-if=config.pagination.enable class="vt-ipp-label text-muted pull-right">{{config.labels.pagination.itemsPerPage}}:</span></div></div></div><div class=row><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><div ng-show=updatingTableColumns class=vt-updating-backdrop ng-style=::getTBodyStyle()><div class="text-center vt-updating-icon-wrapper" ng-style="::{ \'line-height\': getTBodyStyle().height }"><i class="fa fa-refresh fa-spin"></i></div></div><table id={{::config.id}} class="table table-hover veasy-table" ng-class="::{ \'table-striped\': haveHiddenColumn(config.columns) && config.toggleColumns }"><thead><tr><th ng-if=::config.checkbox.enable class=vt-checkbox><div><label><input id=checkbox-master type=checkbox ng-model=master.checkbox ng-model-option="{debounce: 300}" ng-change="checkAllPageRows(currentPage, master.checkbox)"></label></div></th><th ng-repeat-start="column in config.columns" ng-if=!column.toggle ng-hide="hideColumnOn(column, column.hideOn)" ng-style="{ \'width\': getColumnStyle(column) + \'px\', \'max-width\': getColumnStyle(column) + \'px\', \'min-width\': \'1px\' }" ng-class="::{ \'vt-special-column\': column.contextMenu }"><div ng-if=::!column.contextMenu><span class=vt-ellipsis><i ng-if=::config.sort.enable ng-click=sort(column.value) class="vt-sortable-icon fa" ng-class="::defineSortableIcon(direction, column.value)"></i> <span ng-if=!dropdownFilters[column.value]>{{::column.header}}</span> <span class=vt-column-filter-data ng-if=dropdownFilters[column.value] ng-click=openDropdownFilter(column.value)>{{::column.header}}</span></span><div class=dropdown ng-if=::dropdownFilters[column.value]><button id=dd-{{::column.value}} class=dropdown-toggle data-toggle=dropdown aria-haspopup=true aria-expanded=true style="display: none;"></button><ul class="dropdown-menu vt-column-dd"><div class=vt-dd-arrow-top></div><li ng-repeat="filter in ::dropdownFilters[column.value]"><div class=checkbox style="margin: 0px 10px 0px 10px;"><label style="width: 100%;"><input type=checkbox ng-model=filter.checked ng-model-options="{debounce: 300}" ng-change="addDropdownFilter($event, dropdownFilters, column.value);">{{::filter.label || filter.defaultValue}}</label></div></li></ul></div></div><span ng-if=::column.contextMenu></span></th><th ng-repeat-end ng-if=showToggleIcon(column) ng-click=toggleAllRows() class="vt-toggle-icon-master text-center"><i ng-class="getToggleIconClasses(config, master.expanded, !master.expanded)"></i></th></tr></thead><tbody><tr ng-repeat-start="(rowIndex, row) in paginatedList[currentPage]" ng-click="onClickRow($event, row)" ng-style="::{\'cursor\': config.clickRow.enable ? \'pointer\' : \'default\' }"><td ng-if=::config.checkbox.enable class=vt-checkbox><div><label><input type=checkbox ng-model=checkboxes[currentPage][rowIndex] ng-model-options="{debounce: 300}" ng-click="checkRow($event, currentPage, rowIndex)"></label></div></td><td ng-repeat-start="column in config.columns" ng-if="!column.toggle && !column.isHidden" ng-style="::{ \'width\': getColumnStyle(column) + \'px\', \'max-width\': getColumnStyle(column) + \'px\', \'min-width\': \'1px\' }" ng-class="::{ \'vt-context-menu-column\': column.contextMenu }"><div ng-if="::(!column.toggle && !column.contextMenu)" class=vt-ellipsis><span ng-bind-html="::applyFilter(row[column.value] || column.default, column.filter)" title="{{::applyFilter(row[column.value] || column.default, column.filter)}}"></span></div><div ng-if=::column.contextMenu class="dropdown text-center vt-context-menu vt-dropdown"><div class="dropdown-toggle vt-dropdown" data-toggle=dropdown aria-haspopup=true aria-expanded=true><i class="{{::config.contextMenu.icon}} vt-dropdown"></i></div><ul class="dropdown-menu dropdown-menu-right vt-dropdown"><div class="vt-dd-arrow-right vt-dropdown"></div><li ng-repeat="option in ::config.contextMenu.options" class=vt-dropdown><a ng-click=option.action(row) class=vt-dropdown><i ng-if=::option.icon class="{{::option.icon}} vt-dropdown" style="margin-right: 5px;"></i> {{::option.label}}</a></li></ul></div></td><td ng-repeat-end ng-if=showToggleIcon(column) ng-click="toggleRow($event, rowIndex, row)" class="vt-toggle-icon vt-toggle-column"><div ng-model=expanded[rowIndex] ng-model-options="{debounce: 300}" ng-init="::initToggleButton(rowIndex, row)" class=vt-toggle><i ng-class="getToggleIconClasses(config, expanded[rowIndex], !expanded[rowIndex])"></i></div></td></tr><tr ng-repeat-end ng-if="haveHiddenColumn(config.columns) && expanded[rowIndex]"><td colspan={{::toggleRowColspan}}><span ng-repeat="hiddenCol in ::hiddenContent[currentPage][rowIndex]" class="vt-hidden-column-content vt-ellipsis"><div class=vt-ellipsis ng-style=::responsiveHiddenContentStyle()><strong>{{::hiddenCol.header}}:</strong> <span ng-bind-html="::applyFilter(hiddenCol.value, hiddenCol.filter)" title="{{::applyFilter(hiddenCol.value, hiddenCol.filter)}}"></span></div></span></td></tr></tbody><tfoot><tr><td class=text-muted style="text-align: right;margin-top: 12px;font-size: small;" colspan={{::toggleRowColspan}}>{{::config.labels.pagination.totalItems}}: {{filteredList.length || 0}}</td></tr></tfoot></table></div></div><div class=text-center ng-if=::config.pagination.enable><nav aria-label=pagination><ul class="pagination pagination-sm vt-pagination vt-no-select"><li ng-disabled=isPreviousPageDisabled() ng-class="::{ \'disabled\': isPreviousPageDisabled() }" ng-click=setPage(0)><span aria-label=First><span>&laquo;</span></span></li><li ng-disabled=isPreviousPageDisabled() ng-class="::{ \'disabled\': isPreviousPageDisabled() }" ng-click=previousPage()><span aria-label=Previous><span>&lsaquo;</span></span></li><li ng-repeat="page in pages" ng-class="{ \'active\': currentPage === page }" ng-click=setPage(page)><span>{{::page + 1}}</span></li><li ng-disabled=isNextPageDisabled(paginatedList) ng-class="::{ \'disabled\': isNextPageDisabled(paginatedList) }" ng-click=nextPage()><span aria-label=Next><span>&rsaquo;</span></span></li><li ng-disabled=isNextPageDisabled(paginatedList) ng-class="::{ \'disabled\': isNextPageDisabled(paginatedList) }" ng-click="setPage(paginatedList.length - 1)"><span aria-label=Last><span>&raquo;</span></span></li></ul></nav></div><div id={{::vetModalId}} class="modal fade" tabindex=-1 role=dialog><div class=modal-dialog role=document ng-class="::{ \'modal-lg\': config.columnFilter.modalOptions.size === \'lg\',\'modal-sm\': config.columnFilter.modalOptions.size === \'sm\' }"><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span>&times;</span></button><h4 class=modal-title>{{::config.labels.modal.title}}</h4></div><div class=modal-body><div class=row><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><div class=vt-modal-screen-icon-wrapper><div class="pull-right text-center vt-modal-screen-icon" ng-model=screenSize.lg ng-model-options="{debounce: 300}" ng-click="checkAllByScreenSize(\'lg\', modalColumns, screenSize.lg)"><i class="fa fa-desktop" data-toggle=tooltip-screen-size data-placement=top title=Desktop></i></div><div class="pull-right text-center vt-modal-screen-icon" ng-model=screenSize.md ng-model-options="{debounce: 300}" ng-click="checkAllByScreenSize(\'md\', modalColumns, screenSize.md)"><i class="fa fa-laptop" data-toggle=tooltip-screen-size data-placement=top title=Laptop></i></div><div class="pull-right text-center vt-modal-screen-icon" ng-model=screenSize.sm ng-model-options="{debounce: 300}" ng-click="checkAllByScreenSize(\'sm\', modalColumns, screenSize.sm)"><i class="fa fa-tablet" data-toggle=tooltip-screen-size data-placement=top title=Tablet></i></div><div class="pull-right text-center vt-modal-screen-icon" ng-model=screenSize.xs ng-model-options="{debounce: 300}" ng-click="checkAllByScreenSize(\'xs\', modalColumns, screenSize.xs)"><i class="fa fa-mobile" data-toggle=tooltip-screen-size data-placement=top title=Smartphone></i></div><div class=clearfix></div></div></div></div><div ng-repeat="(columnIndex, column) in modalColumns" ng-if="::(column.value !== \'toggle\' && column.value !== \'contextMenu\')" class=vt-modal-column><div class=row><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><div><div class="checkbox vt-modal-checkbox pull-left" style="padding: 15px 15px;line-height: 20px;"><label><input id=cbMaster-{{::column.value}} type=checkbox ng-model=modalCheckboxMaster[column.value] ng-modal-options="{debounce: 300}" ng-click="checkWindowSizeMaster(column, modalCheckboxMaster[column.value])">{{::column.header}}</label></div><div class="checkbox vt-modal-checkbox pull-right" style="top: 5px;"><label><input type=checkbox ng-model=column.hideOn.lg ng-modal-options="{debounce: 300}" ng-click="checkWindowSize(column, \'lg\')"></label></div><div class="checkbox vt-modal-checkbox pull-right" style="top: 5px;"><label><input type=checkbox ng-model=column.hideOn.md ng-modal-options="{debounce: 300}" ng-click="checkWindowSize(column, \'md\')"></label></div><div class="checkbox vt-modal-checkbox pull-right" style="top: 5px;"><label><input type=checkbox ng-model=column.hideOn.sm ng-modal-options="{debounce: 300}" ng-click="checkWindowSize(column, \'sm\')"></label></div><div class="checkbox vt-modal-checkbox pull-right" style="top: 5px;"><label><input type=checkbox ng-model=column.hideOn.xs ng-modal-options="{debounce: 300}" ng-click="checkWindowSize(column, \'xs\')"></label></div><div class=clearfix></div></div></div></div></div></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal>{{::config.labels.modal.cancelButton}}</button> <button type=button class="btn btn-primary" ng-click=onConfirmColumnFilterModal(modalColumns)>{{::config.labels.modal.okButton}}</button></div></div></div></div></div>')}])}();